#!/bin/bash
#TO USE THIS SCRIPT, TYPE, FOR EXAMPLE: sh sendjobs 6. 1111 10000 10 0

### set the variables read from the command line
ENERGY=$1
SEED=$2
NEV=$3
NJOBS=$4
INDEX=$5

### start the loop of jobs
nj=0
while 
test $nj -lt $NJOBS
do

### set the suffix of the output files
  let ind=$nj+$5 
  SUFFIX=$ind
  echo " SUFFIX = $SUFFIX "

### copy the input file into a new one (so that you can keep a track of the different files that are run)
  new_inputfile="raw."$SUFFIX
  log_inputfile=zz"_"$new_inputfile
  echo " The new input file = " $new_inputfile

### substitute in the input file the variables from the command line  
  awk -v ENERGY=$ENERGY -v SEED=$SEED -v NEV=$NEV -v nj=$nj -v SUFFIX=$SUFFIX '{
    if($1=="/run/beamOn") {printf("%s %s \n",$1, NEV) }      
    else if ($1=="/gamos/random/restoreSeeds") {printf("%s %s %s\n",$1, SEED+nj, SEED+(2*nj)) }
   # else if($2=="RTPSPDoseHistos:FileName") {printf("%s %s %s\n",$1, $2, "root_raw."SUFFIX) }
    else if($2=="GmPSPrinter3ddose_doseScorer:FileName") {printf("%s %s %s\n",$1, $2, "3ddose_raw."SUFFIX) }
    # else if($2=="GmPSPrinterSqdose_doseScorer:FileName") {printf("%s %s %s\n",$1, $2, "Sqdose_raw."SUFFIX) }
    else if($1=="/gamos/generator/addSingleParticleSource") {printf("%s %s %s %s\n",$1,$2,$3,ENERGY"*keV") }
    else if($1=="/gamos/generator/energyDist") {printf("%s %s %s %s\n",$1,$2,$3,ENERGY"keV") }
    else { print $0 }
  }' "raw.in" > $new_inputfile".inn"

### run job in background 
  gamos $new_inputfile".inn" 2>&1 | tee $log_inputfile &
### run job in foreground 
#  gamos $new_inputfile".inn" 2>&1 | tee $log_inputfile 

nj=$(($nj + 1))

done
